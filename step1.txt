English: Step 1

cat en-ud-test.conllu | udapy -s util.Filter keep_tree_if_node="not node.parent.is_root() and len([c for c in node.parent.children]) >= 3 and any(c.deprel in {'nsubj'} for c in node.parent.children) and all(c.deprel not in {'ccomp', 'xcomp'} for c in node.parent.children) and node.deprel == 'conj' and all(c.deprel not in {'acl', 'acl:relcl', 'xcomp', 'ccomp', 'advcl', 'expl'} for c in node.children) and any(c.deprel in {'nsubj'} for c in node.children) and not (node.upos != 'VERB' and node.parent.upos != 'VERB') and all(not(c.form == 'it' and c.deprel == 'nsubj') for c in node.children) and not (node.upos == 'VERB' and node.parent.upos != 'VERB' and len([c for c in node.children if c.deprel not in {'aux', 'nsubj', 'cc', 'punct', 'obj'} and (c.form not in {'nt', 'not'})]) < 2) and not (node.upos == 'ADJ' and (node.form.endswith('er') or node.form.endswith('ed') or any(ch.form in {'the'} for ch in node.children))) and '?' not in root.text.split()[-1] and root.text.split()[0].lower() not in {'why', 'what'}" mark="Mark" | udapy write.TextModeTrees
